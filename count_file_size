#!/usr/bin/env ruby

def count_zipped_file_size(path=nil)
  system "rm temp.zip 2>/dev/null"
  system "zip -9 temp.zip #{path} > /dev/null"
  original_size = `wc -c < #{path}`.chomp
  zipped_size = `wc -c < temp.zip`.chomp
  system "rm temp.zip 2>/dev/null"

  puts "Original #{original_size} bytes" if !ARGV.empty?
  zipped_size
end

puts "Linked List"
puts "  - Cpp #{count_zipped_file_size("Cpp/LinkedList.hpp")} bytes"
puts "  - Elm #{count_zipped_file_size("Elm/src/LinkedList.elm")} bytes"
puts "  - Haskell #{count_zipped_file_size("Haskell/LinkedList.hs")} bytes"
puts "  - TypeScript #{count_zipped_file_size("TypeScript/LinkedList.ts")} bytes"
puts
puts "Binary Search Tree"
puts "  - Cpp: #{count_zipped_file_size("Cpp/BinarySearchTree.hpp")} bytes"
puts "  - Elm: #{count_zipped_file_size("Elm/src/BinarySearchTree.elm")} bytes"
puts "  - Haskell: #{count_zipped_file_size("Haskell/BinarySearchTree.hs")} bytes"
puts "  - TypeScript: #{count_zipped_file_size("TypeScript/BinarySearchTree.ts")} bytes"
